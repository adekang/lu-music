{"version":3,"file":"index.77a63020.js","sources":["../../src/pages/Rank/index.tsx"],"sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { RootState, useAppDispatch } from \"@/store\";\nimport { useSelector } from \"react-redux\";\nimport Scroll from \"@/components/Scroll\";\nimport { getRankList } from \"@/store/rankSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { filterIndex } from \"@/utils\";\nimport \"./index.scss\";\nimport Loading from \"@/components/Loading\";\n\nconst Rank: FC = function () {\n  const { loading, rankList } = useSelector((state: RootState) => state.rank);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const globalStartIndex = filterIndex(rankList);\n  const officialList = rankList.slice(0, globalStartIndex);\n  const globalList = rankList.slice(globalStartIndex);\n\n  useEffect(() => {\n    if (!rankList.length) {\n      dispatch(getRankList());\n    }\n  }, []);\n\n  const enterDetail = (id: number) => {\n    navigate(`./${id}`);\n  };\n\n  const renderSongList = (list: any[]) => {\n    return list.length ? (\n      <ul className=\"RankSongList\">\n        {list.map((item: any, index: any) => {\n          return (\n            <li key={index}>\n              {index + 1}. {item.first} - {item.second}\n            </li>\n          );\n        })}\n      </ul>\n    ) : null;\n  };\n\n  // 这是渲染榜单列表函数，传入 global 变量来区分不同的布局方式\n  const renderRankList = (list: any, global?: any) => {\n    return (\n      <ul\n        className=\"RankList\"\n        style={\n          global\n            ? {\n                display: \"flex\"\n              }\n            : {\n                display: \"\"\n              }\n        }\n      >\n        {list.map((item: any) => {\n          return (\n            <li\n              style={\n                item.tracks.length\n                  ? {\n                      display: \"flex\"\n                    }\n                  : {\n                      display: \"\"\n                    }\n              }\n              className=\"RankListItem\"\n              key={item.updateTime}\n              onClick={() => enterDetail(item.id)}\n            >\n              <div\n                className=\"img_wrapper\"\n                style={\n                  item.tracks.length\n                    ? {\n                        width: \"27vw\",\n                        height: \"27vw\"\n                      }\n                    : {\n                        width: \"32vw\",\n                        height: \"32vw\"\n                      }\n                }\n              >\n                <img src={item.coverImgUrl} alt=\"\" />\n                <div className=\"decorate\" />\n                <span className=\"update_frequecy\">{item.updateFrequency}</span>\n              </div>\n              {renderSongList(item.tracks)}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  // 榜单数据未加载出来之前都给隐藏\n  const displayStyle = loading ? { display: \"none\" } : { display: \"\" };\n\n  return (\n    <>\n      <div className=\"RankContainer\">\n        <Scroll>\n          <div>\n            <h1 className=\"offical\" style={displayStyle}>\n              官方榜\n            </h1>\n            {renderRankList(officialList)}\n            <h1 className=\"global\" style={displayStyle}>\n              全球榜\n            </h1>\n            {renderRankList(globalList, true)}\n            {loading ? <Loading /> : null}\n          </div>\n        </Scroll>\n      </div>\n    </>\n  );\n};\nexport default Rank;\n\n// useEffect(() => {\n//   (async function () {\n//     const res = await getData();\n//     console.log(res);\n//     res.code === 0 && setstate(res.data);\n//   })();\n// }, []);\n"],"names":["Rank","loading","rankList","useSelector","state","rank","dispatch","useAppDispatch","navigate","useNavigate","globalStartIndex","filterIndex","officialList","slice","globalList","useEffect","length","getRankList","renderRankList","list","global","React","createElement","className","style","display","map","item","tracks","key","updateTime","onClick","enterDetail","id","width","height","src","coverImgUrl","alt","updateFrequency","index2","first","second","renderSongList","displayStyle","Scroll","Loading"],"mappings":"iIAUA,MAAMA,EAAW,WACf,MAAMC,QAAEA,EAASC,SAAAA,GAAaC,GAAaC,GAAqBA,EAAMC,OAChEC,EAAWC,IACXC,EAAWC,IAEXC,EAAmBC,EAAYT,GAC/BU,EAAeV,EAASW,MAAM,EAAGH,GACjCI,EAAaZ,EAASW,MAAMH,GAElCK,EAAAA,QAAAA,WAAU,KACHb,EAASc,QACZV,EAASW,OAEV,IAEG,MAmBAC,EAAiB,CAACC,EAAWC,IAE9BC,EAAAC,cAAA,KAAA,CACCC,UAAU,WACVC,MACEJ,EACI,CACEK,QAAS,QAEX,CACEA,QAAS,KAIhBN,EAAKO,KAAKC,GAENN,EAAAC,cAAA,KAAA,CACCE,MACEG,EAAKC,OAAOZ,OACR,CACES,QAAS,QAEX,CACEA,QAAS,IAGjBF,UAAU,eACVM,IAAKF,EAAKG,WACVC,QAAS,KAAMC,OA/CNC,EA+CkBN,EAAKM,QA9C1CzB,EAAS,KAAKyB,KADI,IAACA,IAiDRZ,EAAAC,cAAA,MAAA,CACCC,UAAU,cACVC,MACEG,EAAKC,OAAOZ,OACR,CACEkB,MAAO,OACPC,OAAQ,QAEV,CACED,MAAO,OACPC,OAAQ,SAIfd,EAAAC,cAAA,MAAA,CAAIc,IAAKT,EAAKU,YAAaC,IAAI,KAC/BjB,EAAAC,cAAA,MAAA,CAAIC,UAAU,aACdF,EAAAC,cAAA,OAAA,CAAKC,UAAU,mBAAmBI,EAAKY,kBA7D/B,CAACpB,GACfA,EAAKH,OACTK,EAAAC,cAAA,KAAA,CAAGC,UAAU,gBACXJ,EAAKO,KAAI,CAACC,EAAWa,IAEjBnB,EAAAC,cAAA,KAAA,CAAGO,IAAKW,GACNA,EAAQ,EAAE,KAAGb,EAAKc,MAAM,MAAId,EAAKe,WAKxC,KAoDOC,CAAehB,EAAKC,YAS3BgB,EAAe3C,EAAU,CAAEwB,QAAS,QAAW,CAAEA,QAAS,IAEhE,uCAEKJ,EAAAC,cAAA,MAAA,CAAIC,UAAU,iBACZF,EAAAC,cAAAuB,EAAA,KACExB,EAAAC,cAAA,MAAA,KACED,EAAAC,cAAA,KAAA,CAAGC,UAAU,UAAUC,MAAOoB,GAAc,OAG5C1B,EAAeN,GACfS,EAAAC,cAAA,KAAA,CAAGC,UAAU,SAASC,MAAOoB,GAAc,OAG3C1B,EAAeJ,GAAY,GAC3Bb,EAAUoB,EAAAC,cAACwB,EAAQ,MAAK"}